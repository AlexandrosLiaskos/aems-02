# AEMS Environment Configuration
# Copy this file to .env and fill in your actual values

# ================================
# OpenAI API Configuration
# ================================
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# ================================
# Google OAuth2 Configuration
# ================================
# Create credentials at: https://console.cloud.google.com/apis/credentials
# Required scopes: gmail.readonly, userinfo.profile, userinfo.email
GOOGLE_CLIENT_ID=your-google-client-id-here.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret-here
GOOGLE_REDIRECT_URL=http://localhost:3000/auth/google/callback

# ================================
# Server Configuration
# ================================
# Port for the Express server
PORT=3000

# Session secret - MUST be at least 32 characters long
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=your-secure-session-secret-minimum-32-characters-long-here

# Session timeout in milliseconds (default: 1 hour = 3600000)
# 5 minutes = 300000, 1 hour = 3600000, 24 hours = 86400000
SESSION_TIMEOUT=3600000

# ================================
# Gmail API Configuration
# ================================
# Maximum emails to fetch per sync (Gmail API quota management)
MAX_EMAILS_PER_SYNC=50

# Auto-sync interval in minutes
SYNC_INTERVAL_MINUTES=5

# Gmail API quota units limit per sync
QUOTA_UNITS_PER_SYNC_LIMIT=500

# ================================
# AI Processing Configuration
# ================================
# Number of emails to process in each AI batch
AI_BATCH_SIZE=5

# Delay between AI batch processing (milliseconds)
AI_BATCH_DELAY=1000

# OpenAI model to use for processing
OPENAI_MODEL=gpt-3.5-turbo

# Maximum tokens for AI requests
OPENAI_MAX_TOKENS=1000

# AI processing timeout in seconds
AI_TIMEOUT=30

# ================================
# Security Configuration
# ================================
# Enable comprehensive audit logging
ENABLE_AUDIT_LOGGING=true

# Enable CSRF protection for state-changing operations
ENABLE_CSRF_PROTECTION=true

# Enable rate limiting
ENABLE_RATE_LIMITING=true

# Maximum failed authentication attempts per IP
MAX_AUTH_ATTEMPTS=5

# Lockout duration after max attempts (minutes)
AUTH_LOCKOUT_DURATION=15

# ================================
# Database Configuration
# ================================
# Path to data directory (relative to project root)
DATA_DIR=./data

# Maximum number of audit log entries to keep
MAX_AUDIT_ENTRIES=10000

# Backup retention period in days
BACKUP_RETENTION_DAYS=30

# ================================
# Email Processing Configuration
# ================================
# Languages to support for AI extraction
SUPPORTED_LANGUAGES=english,greek

# Default language for new users
DEFAULT_LANGUAGE=both

# Maximum email body length to process (characters)
MAX_EMAIL_BODY_LENGTH=10000

# ================================
# File Upload Configuration
# ================================
# Maximum file size for imports (bytes) - 10MB
MAX_UPLOAD_SIZE=10485760

# Allowed file types for import
ALLOWED_IMPORT_TYPES=application/json,text/csv,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet

# Upload directory (relative to project root)
UPLOAD_DIR=./uploads

# ================================
# Notification Configuration
# ================================
# Enable real-time notifications
ENABLE_NOTIFICATIONS=true

# Maximum notifications to show in dropdown
MAX_NOTIFICATIONS_DISPLAY=5

# Notification retention period in days
NOTIFICATION_RETENTION_DAYS=30

# ================================
# Performance Configuration
# ================================
# Enable caching for AI categorization
ENABLE_AI_CACHING=true

# Cache expiration time in minutes
CACHE_EXPIRATION_MINUTES=60

# Maximum concurrent AI requests
MAX_CONCURRENT_AI_REQUESTS=3

# ================================
# Development Configuration
# ================================
# Environment (development, production, test)
NODE_ENV=development

# Enable debug logging
DEBUG_ENABLED=false

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable SQL query logging
LOG_DATABASE_QUERIES=false

# ================================
# Production Configuration
# ================================
# Use secure cookies in production
SECURE_COOKIES=false

# Enable HTTPS redirect
FORCE_HTTPS=false

# Trust proxy headers (for load balancers)
TRUST_PROXY=false

# Sentry DSN for error reporting (optional)
SENTRY_DSN=

# ================================
# Backup Configuration
# ================================
# Enable automatic backups
ENABLE_AUTO_BACKUP=true

# Backup schedule (cron format) - daily at 2 AM
BACKUP_SCHEDULE=0 2 * * *

# Backup directory
BACKUP_DIR=./backups

# ================================
# Email Content Configuration
# ================================
# Maximum attachment size to process (bytes) - 5MB
MAX_ATTACHMENT_SIZE=5242880

# Supported attachment types for processing
SUPPORTED_ATTACHMENT_TYPES=application/pdf,image/jpeg,image/png

# Enable attachment text extraction
ENABLE_ATTACHMENT_EXTRACTION=true

# ================================
# API Rate Limiting
# ================================
# General API rate limit (requests per 15 minutes)
API_RATE_LIMIT=100

# Authentication API rate limit (requests per 15 minutes)
AUTH_RATE_LIMIT=5

# Sync API rate limit (requests per 5 minutes)
SYNC_RATE_LIMIT=10

# AI processing rate limit (requests per minute)
AI_RATE_LIMIT=20

# ================================
# Monitoring Configuration
# ================================
# Enable performance monitoring
ENABLE_PERFORMANCE_MONITORING=false

# Health check endpoint
ENABLE_HEALTH_CHECK=true

# Metrics endpoint
ENABLE_METRICS_ENDPOINT=false

# ================================
# Third-party Integrations
# ================================
# Webhook URL for notifications (optional)
WEBHOOK_URL=

# Slack webhook for alerts (optional)
SLACK_WEBHOOK_URL=

# Discord webhook for alerts (optional)
DISCORD_WEBHOOK_URL=

# ================================
# Advanced Configuration
# ================================
# Enable experimental features
ENABLE_EXPERIMENTAL_FEATURES=false

# Custom user agent for API requests
CUSTOM_USER_AGENT=AEMS/1.0

# Request timeout in seconds
REQUEST_TIMEOUT=30

# Enable CORS for external access
ENABLE_CORS=false

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000

# ================================
# Error Handling Configuration
# ================================
# Show detailed error messages in development
SHOW_DETAILED_ERRORS=true

# Error reporting level (1=errors only, 2=warnings, 3=all)
ERROR_REPORTING_LEVEL=1

# Email for error notifications (optional)
ERROR_NOTIFICATION_EMAIL=

# ================================
# Localization Configuration
# ================================
# Default locale
DEFAULT_LOCALE=en

# Available locales (comma-separated)
AVAILABLE_LOCALES=en,el

# Enable automatic language detection
AUTO_DETECT_LANGUAGE=true